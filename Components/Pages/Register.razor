@page "/register"
@inject NavigationManager Navigation
@inject userService UserService
@using PrameshBudgetTracker.Components.Layout
@layout FirstLayout

<div class="flex items-center justify-center min-h-screen bg-gray-light">
    <div class="bg-white p-8 rounded-lg shadow-md w-96">
        <h1 class="text-2xl font-bold text-green-900 text-center mb-2">CashFlow</h1>
        <p class="text-gray-600 mb-6">Provide your details to register</p>
        <form>
            <div class="mb-4">
                <label for="username" class="block text-sm font-medium text-gray-600 mb-1">Username</label>
                <input @bind="username" type="text" id="username" placeholder="Enter your username"
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent" />
            </div>
            <div class="mb-4">
                <label for="email" class="block text-sm font-medium text-gray-600 mb-1">Email</label>
                <input @bind="email" type="email" id="email" placeholder="Enter your email"
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent" />
            </div>
            <div class="mb-4">
                <label for="password" class="block text-sm font-medium text-gray-600 mb-1">Password</label>
                <input @bind="password" type="password" id="password" placeholder="Enter your password"
                       class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent" />
            </div>
            <div class="currency-selection mb-4">
                <label for="currency" class="block text-sm font-medium text-gray-600 mb-1">Currency</label>
                <select id="currency" @bind="selectedCurrency"
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent">
                    <option value="NPR">Nepali Rupees</option>
                    <option value="USD">US Dollars</option>
                    <option value="GBP">British Pound</option>
                </select>
            </div>
            <button @onclick="HandleRegister" type="button"
                    class="w-full py-2 bg-slate-800 text-white font-medium rounded-lg hover:bg-primary-dark transition duration-200" disabled="@isRegistering">
                @(isRegistering ? "Signing up..." : "Sign Up")
            </button>
        </form>
        <p class="text-sm text-gray-600 text-center mt-4">
            Already have an account? <a href="/" class="text-primary hover:underline">Log in</a>
        </p>
    </div>
</div>

@if (!string.IsNullOrEmpty(message))
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white p-6 rounded-lg shadow-lg">
            <p class="text-red-500 mb-4">@message</p>
            <button @onclick="() => message = null"
                    class="w-full py-2 bg-slate-800 text-white font-medium rounded-lg">
                Close
            </button>
        </div>
    </div>
}

@code {
    private string selectedCurrency = "NPR";
    private string username;
    private string email;
    private string password;
    private string message;
    private bool isRegistering = false;

    private async Task HandleRegister()
    {
        if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))
        {
            message = "Please fill in all fields.";
            return;
        }

        isRegistering = true;

        bool isRegistered = UserService.RegisterUser(username, email, password, selectedCurrency);
        if (isRegistered)
        {
            await Task.Delay(1000);
            Navigation.NavigateTo("/");
        }
        else
        {
            message = "Username or email already exists.";
        }

        isRegistering = false;
    }
}